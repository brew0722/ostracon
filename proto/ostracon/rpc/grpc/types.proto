syntax = "proto3";
package ostracon.rpc.grpc;
option  go_package = "github.com/line/ostracon/rpc/grpc;coregrpc";

import "ostracon/types/block.proto";
import "ostracon/abci/types.proto";

//----------------------------------------
// Request types

message RequestPing {}

message RequestBroadcastTx {
  bytes tx = 1;
}

message RequestBlock {
  int64 height = 1;
}

message RequestBlockByHash {
  bytes hash = 1;
}

message RequestBlockResults {
  int64 height = 1;
}

//----------------------------------------
// Response types

message ResponsePing {}

message ResponseBroadcastTx {
  ostracon.abci.ResponseCheckTx   check_tx   = 1;
  ostracon.abci.ResponseDeliverTx deliver_tx = 2;
}

message ResponseBlock {
  ostracon.types.Block block = 1;
}

message ResponseBlockResults {
  int64    height                                          = 1;
  repeated ostracon.abci.ResponseDeliverTx txs_results     = 2;
  ostracon.abci.ResponseBeginBlock         res_begin_block = 3;
  ostracon.abci.ResponseEndBlock           res_end_block   = 4;
}

//----------------------------------------
// Service Definition

service BroadcastAPI {
  rpc Ping(RequestPing) returns (ResponsePing);
  rpc BroadcastTx(RequestBroadcastTx) returns (ResponseBroadcastTx);
}

service BlockAPI {
  rpc Block(RequestBlock) returns (ResponseBlock);
  rpc BlockByHash(RequestBlockByHash) returns (ResponseBlock);
  rpc BlockResults(RequestBlockResults) returns (ResponseBlockResults);
}